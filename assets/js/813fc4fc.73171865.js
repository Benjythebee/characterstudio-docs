"use strict";(self.webpackChunkcharacterstudio_docs=self.webpackChunkcharacterstudio_docs||[]).push([[601],{3958:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>d});var s=t(4848),o=t(8453);const c={},a="Save",r={id:"Developers/Pages/save",title:"Save",description:"The Save component is a part of a React application that provides a user interface for saving a character. It includes buttons for going back, merging options, exporting, and minting. The component also interacts with several contexts to manage view modes, language, sound, and audio settings.",source:"@site/docs/Developers/Pages/save.md",sourceDirName:"Developers/Pages",slug:"/Developers/Pages/save",permalink:"/characterstudio-docs/docs/Developers/Pages/save",draft:!1,unlisted:!1,editUrl:"https://github.com/m3-org/characterstudio-docs/tree/main/docs/Developers/Pages/save.md",tags:[],version:"current",lastUpdatedBy:"madjin",lastUpdatedAt:1708577163,formattedLastUpdatedAt:"Feb 22, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mint",permalink:"/characterstudio-docs/docs/Developers/Pages/mint"},next:{title:"Load",permalink:"/characterstudio-docs/docs/Developers/Pages/load"}},i={},d=[];function l(e){const n={code:"code",h1:"h1",li:"li",ol:"ol",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"save",children:"Save"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Save"})," component is a part of a React application that provides a user interface for saving a character. It includes buttons for going back, merging options, exporting, and minting. The component also interacts with several contexts to manage view modes, language, sound, and audio settings."]}),"\n",(0,s.jsx)(n.p,{children:"In layman's terms, this component is like a control panel for a character in a game or app. It allows the user to save their character, go back to previous steps, export their character's image, and perform a process called \"minting\". It also adjusts its behavior based on the user's language and sound settings. Here's a breakdown of what it doesn:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Imports"}),": The component imports several dependencies at the top of the file. These include React itself, some CSS styles, other components (",(0,s.jsx)(n.code,{children:"ExportMenu"}),", ",(0,s.jsx)(n.code,{children:"CustomButton"}),", ",(0,s.jsx)(n.code,{children:"MergeOptions"}),"), and several contexts (",(0,s.jsx)(n.code,{children:"ViewContext"}),", ",(0,s.jsx)(n.code,{children:"LanguageContext"}),", ",(0,s.jsx)(n.code,{children:"SoundContext"}),", ",(0,s.jsx)(n.code,{children:"AudioContext"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Function Component"}),": The ",(0,s.jsx)(n.code,{children:"Save"})," function is a React component that receives ",(0,s.jsx)(n.code,{children:"getFaceScreenshot"})," as a prop."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Contexts"}),": Inside the component, it uses the ",(0,s.jsx)(n.code,{children:"useContext"})," hook to access the values from the imported contexts. These values include translation function (",(0,s.jsx)(n.code,{children:"t"}),"), sound playing function (",(0,s.jsx)(n.code,{children:"playSound"}),"), mute status (",(0,s.jsx)(n.code,{children:"isMute"}),"), and a function to set the view mode (",(0,s.jsx)(n.code,{children:"setViewMode"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Functions"}),": It defines two functions, ",(0,s.jsx)(n.code,{children:"back"})," and ",(0,s.jsx)(n.code,{children:"mint"}),", which are used to change the view mode and play a sound if the audio is not muted."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Render"}),": In the render return, it uses the imported components and contexts to create a user interface. This includes a title, two ",(0,s.jsx)(n.code,{children:"CustomButton"})," components, a ",(0,s.jsx)(n.code,{children:"MergeOptions"})," component, and an ",(0,s.jsx)(n.code,{children:"ExportMenu"})," component. The ",(0,s.jsx)(n.code,{children:"CustomButton"})," components have onClick handlers that trigger the ",(0,s.jsx)(n.code,{children:"back"})," and ",(0,s.jsx)(n.code,{children:"mint"})," functions when clicked."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Export"}),": At the end of the file, it exports the ",(0,s.jsx)(n.code,{children:"Save"})," component as a default export, so it can be imported and used in other parts of the application."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(6540);const o={},c=s.createContext(o);function a(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);