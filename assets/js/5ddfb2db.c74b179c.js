"use strict";(self.webpackChunkcharacterstudio_docs=self.webpackChunkcharacterstudio_docs||[]).push([[5564],{5883:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var s=n(4848),o=n(8453);const i={},c="Mint",r={id:"Developers/Pages/mint",title:"Mint",description:"The MintComponent is a React component that provides the functionality for minting a digital asset. In layman's terms, it's like a factory machine interface where you can create your own unique digital item (like a character in a game). This component handles the process of creating the item, showing the status of the creation process, and providing buttons to navigate to other parts of the application.",source:"@site/docs/Developers/Pages/mint.md",sourceDirName:"Developers/Pages",slug:"/Developers/Pages/mint",permalink:"/characterstudio-docs/docs/Developers/Pages/mint",draft:!1,unlisted:!1,editUrl:"https://github.com/m3-org/characterstudio-docs/tree/main/docs/Developers/Pages/mint.md",tags:[],version:"current",lastUpdatedBy:"madjin",lastUpdatedAt:1708577163,formattedLastUpdatedAt:"Feb 22, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"View",permalink:"/characterstudio-docs/docs/Developers/Pages/view"},next:{title:"Save",permalink:"/characterstudio-docs/docs/Developers/Pages/save"}},a={},d=[];function l(e){const t={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"mint",children:"Mint"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"MintComponent"})," is a React component that provides the functionality for minting a digital asset. In layman's terms, it's like a factory machine interface where you can create your own unique digital item (like a character in a game). This component handles the process of creating the item, showing the status of the creation process, and providing buttons to navigate to other parts of the application."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Imports"})}),"\n",(0,s.jsx)(t.p,{children:"The component imports several dependencies, including styles, contexts, a custom button component, and a utility function for minting assets."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx!",children:'import React from "react"\nimport styles from "./Mint.module.scss"\nimport { ViewMode, ViewContext } from "../context/ViewContext"\nimport { SceneContext } from "../context/SceneContext"\nimport CustomButton from "../components/custom-button"\nimport { SoundContext } from "../context/SoundContext"\nimport { AudioContext } from "../context/AudioContext"\nimport { mintAsset } from "../library/mint-utils"\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Component Definition"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"MintComponent"})," is a functional component that takes a ",(0,s.jsx)(t.code,{children:"getFaceScreenshot"})," prop. It uses several contexts to get and set various application states."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx!",children:"function MintComponent({getFaceScreenshot}) {\n  const { templateInfo, model, avatar } = React.useContext(SceneContext)\n  const { setViewMode } = React.useContext(ViewContext)\n  const { playSound } = React.useContext(SoundContext)\n  const { isMute } = React.useContext(AudioContext)\n  ...\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"State Variables"})}),"\n",(0,s.jsxs)(t.p,{children:["The component uses two state variables: ",(0,s.jsx)(t.code,{children:"status"})," to store the current status of the minting process, and ",(0,s.jsx)(t.code,{children:"minting"})," to store whether the minting process is currently ongoing."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx!",children:'const [status, setStatus] = React.useState("")\nconst [minting, setMinting]= React.useState(false)\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Functions"})}),"\n",(0,s.jsx)(t.p,{children:"The component defines several functions:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"back"})," and ",(0,s.jsx)(t.code,{children:"next"})," are used to navigate to other views in the application."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"MenuTitle"})," is a sub-component that renders the title of the menu."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"Mint"})," is an asynchronous function that handles the minting process."]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx!",children:"const back = () => {...}\nconst next = () => {...}\nfunction MenuTitle() {...}\nasync function Mint(){...}\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Render"})}),"\n",(0,s.jsx)(t.p,{children:"The component returns a JSX structure that includes:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A title for the section."}),"\n",(0,s.jsxs)(t.li,{children:["A container for the minting process, which includes the ",(0,s.jsx)(t.code,{children:"MenuTitle"})," sub-component, two ",(0,s.jsx)(t.code,{children:"CustomButton"})," components for the minting options, and a status message."]}),"\n",(0,s.jsx)(t.li,{children:"A container for navigation buttons."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx!",children:"return (\n  <div className={styles.container}>\n    ...\n  </div>\n)\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Export"})}),"\n",(0,s.jsxs)(t.p,{children:["Finally, the ",(0,s.jsx)(t.code,{children:"MintComponent"})," is exported for use in other parts of the application."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx!",children:"export default MintComponent\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>r});var s=n(6540);const o={},i=s.createContext(o);function c(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);