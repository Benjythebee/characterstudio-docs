"use strict";(self.webpackChunkcharacterstudio_docs=self.webpackChunkcharacterstudio_docs||[]).push([[2168],{7707:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>t,toc:()=>d});var i=s(4848),r=s(8453);const c={},o="Screenshot Manager",t={id:"Developers/Managers/screenshot-manager",title:"Screenshot Manager",description:"ScreenshotManager is responsible for capturing screenshots with various framing options within a Three.js scene.",source:"@site/docs/Developers/Managers/screenshot-manager.md",sourceDirName:"Developers/Managers",slug:"/Developers/Managers/screenshot-manager",permalink:"/characterstudio-docs/docs/Developers/Managers/screenshot-manager",draft:!1,unlisted:!1,editUrl:"https://github.com/m3-org/characterstudio-docs/tree/main/docs/Developers/Managers/screenshot-manager.md",tags:[],version:"current",lastUpdatedBy:"memelotsqui",lastUpdatedAt:1709269546,formattedLastUpdatedAt:"Mar 1, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Blink Manager",permalink:"/characterstudio-docs/docs/Developers/Managers/blink-manager"},next:{title:"LoRa Data Generator",permalink:"/characterstudio-docs/docs/Developers/Managers/lora-data-generator"}},a={},d=[{value:"Constructor",id:"constructor",level:2},{value:"ScreenshotManager(characterManager, scene)",id:"screenshotmanagercharactermanager-scene",level:3},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>setScene(scene)</code>",id:"setscenescene",level:3},{value:"<code>setupCamera(cameraPosition, lookAtPosition, fieldOfView = 30)</code>",id:"setupcameracameraposition-lookatposition-fieldofview--30",level:3},{value:"<code>frameCloseupShot()</code>",id:"framecloseupshot",level:3},{value:"<code>frameMediumShot()</code>",id:"framemediumshot",level:3},{value:"<code>frameCowboyShot()</code>",id:"framecowboyshot",level:3},{value:"<code>frameFullShot()</code>",id:"framefullshot",level:3},{value:"<code>frameShot(minBoneName, maxBoneName, cameraPosition = null, minGetsMaxVertex = false, maxGetsMaxVertex = true)</code>",id:"frameshotminbonename-maxbonename-cameraposition--null-mingetsmaxvertex--false-maxgetsmaxvertex--true",level:3},{value:"<code>setBottomFrameOffset(min)</code>",id:"setbottomframeoffsetmin",level:3},{value:"<code>setTopFrameOffset(max)</code>",id:"settopframeoffsetmax",level:3},{value:"<code>setCameraFrameWithName(shotName, vectorCameraPosition)</code>",id:"setcameraframewithnameshotname-vectorcameraposition",level:3},{value:"<code>positionCameraBetweenPoints(vector1, vector2, cameraPosition, fieldOfView = 30)</code>",id:"positioncamerabetweenpointsvector1-vector2-cameraposition-fieldofview--30",level:3},{value:"<code>setCamera(headPosition, playerCameraDistance, fieldOfView = 30)</code>",id:"setcameraheadposition-playercameradistance-fieldofview--30",level:3},{value:"<code>setBackground(background)</code>",id:"setbackgroundbackground",level:3},{value:"<code>setBackgroundColor(r, g, b, a)</code>",id:"setbackgroundcolorr-g-b-a",level:3},{value:"<code>setBackgroundImage(url)</code>",id:"setbackgroundimageurl",level:3},{value:"<code>savePixelScreenshot(imageName, width, height, pixelSize)</code>",id:"savepixelscreenshotimagename-width-height-pixelsize",level:3},{value:"<code>saveScreenshot(imageName, width, height)</code>",id:"savescreenshotimagename-width-height",level:3},{value:"<code>getScreenshotImage(width, height)</code>",id:"getscreenshotimagewidth-height",level:3},{value:"<code>getScreenshotTexture(width, height)</code>",id:"getscreenshottexturewidth-height",level:3},{value:"<code>getScreenshotBlob(width, height)</code>",id:"getscreenshotblobwidth-height",level:3},{value:"<code>saveFile(strData, filename)</code>",id:"savefilestrdata-filename",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"screenshot-manager",children:"Screenshot Manager"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ScreenshotManager"})," is responsible for capturing screenshots with various framing options within a Three.js scene."]}),"\n",(0,i.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,i.jsx)(n.h3,{id:"screenshotmanagercharactermanager-scene",children:"ScreenshotManager(characterManager, scene)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"characterManager"}),": The character manager instance."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"scene"}),": The Three.js scene to capture screenshots from."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(n.p,{children:["Properties for ",(0,i.jsx)(n.code,{children:"ScreenshotManager"})," are not meant to be edited directly they are modified with methods."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".renderer"})}),"\n",(0,i.jsx)(n.p,{children:"The WebGL renderer for capturing screenshots."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".scene: Scene"})}),"\n",(0,i.jsx)(n.p,{children:"The Three.js scene."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".characterManager: CharacterManage"})}),"\n",(0,i.jsx)(n.p,{children:"The character manager instance."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".camera: PerspectiveCamera"})}),"\n",(0,i.jsx)(n.p,{children:"The camera used for capturing screenshots."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".textureLoader: TextureLoader"})}),"\n",(0,i.jsx)(n.p,{children:"The texture loader for loading textures."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".sceneBackground: Color"})}),"\n",(0,i.jsx)(n.p,{children:"The background color of the scene."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".sceneBackgroundAlpha: Number*"})}),"\n",(0,i.jsx)(n.p,{children:"The alpha value for the scene background."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".frameOffset: Object"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"min"}),": Minimum offset for framing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"max"}),": Maximum offset for framing."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".usesBackgroundImage: Boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Flag indicating whether a background image is used."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".backgroundMaterial: MeshBasicMaterial*"})}),"\n",(0,i.jsx)(n.p,{children:"Material for the background plane."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".backgroundPlane: Mesh*"})}),"\n",(0,i.jsx)(n.p,{children:"Plane used for the background."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".pixelRenderer: PixelRenderer"})}),"\n",(0,i.jsx)(n.p,{children:"Pixel renderer instance for rendering pixels."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:".boneOffsets: Object"})}),"\n",(0,i.jsx)(n.p,{children:"Offset values for specific bones."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"setscenescene",children:(0,i.jsx)(n.code,{children:"setScene(scene)"})}),"\n",(0,i.jsx)(n.p,{children:"Sets the Three.js scene."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"scene"}),": The new scene."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"setupcameracameraposition-lookatposition-fieldofview--30",children:(0,i.jsx)(n.code,{children:"setupCamera(cameraPosition, lookAtPosition, fieldOfView = 30)"})}),"\n",(0,i.jsx)(n.p,{children:"Sets up the camera."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cameraPosition"}),": Position of the camera."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"lookAtPosition"}),": Position to look at."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fieldOfView"})," (optional): Field of view for the camera."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"framecloseupshot",children:(0,i.jsx)(n.code,{children:"frameCloseupShot()"})}),"\n",(0,i.jsx)(n.p,{children:"Frames a close-up shot."}),"\n",(0,i.jsx)(n.h3,{id:"framemediumshot",children:(0,i.jsx)(n.code,{children:"frameMediumShot()"})}),"\n",(0,i.jsx)(n.p,{children:"Frames a medium shot."}),"\n",(0,i.jsx)(n.h3,{id:"framecowboyshot",children:(0,i.jsx)(n.code,{children:"frameCowboyShot()"})}),"\n",(0,i.jsx)(n.p,{children:"Frames a cowboy shot."}),"\n",(0,i.jsx)(n.h3,{id:"framefullshot",children:(0,i.jsx)(n.code,{children:"frameFullShot()"})}),"\n",(0,i.jsx)(n.p,{children:"Frames a full shot."}),"\n",(0,i.jsx)(n.h3,{id:"frameshotminbonename-maxbonename-cameraposition--null-mingetsmaxvertex--false-maxgetsmaxvertex--true",children:(0,i.jsx)(n.code,{children:"frameShot(minBoneName, maxBoneName, cameraPosition = null, minGetsMaxVertex = false, maxGetsMaxVertex = true)"})}),"\n",(0,i.jsx)(n.p,{children:"Frames a shot between two bones."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"minBoneName"}),": Name of the bone representing the minimum point."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"maxBoneName"}),": Name of the bone representing the maximum point."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cameraPosition"})," (optional): Position of the camera."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"minGetsMaxVertex"}),": Whether the minimum bone gets the max vertex."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"maxGetsMaxVertex"}),": Whether the maximum bone gets the max vertex."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"setbottomframeoffsetmin",children:(0,i.jsx)(n.code,{children:"setBottomFrameOffset(min)"})}),"\n",(0,i.jsx)(n.p,{children:"Sets the bottom frame offset."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"min"}),": Minimum offset value."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"settopframeoffsetmax",children:(0,i.jsx)(n.code,{children:"setTopFrameOffset(max)"})}),"\n",(0,i.jsx)(n.p,{children:"Sets the top frame offset."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"max"}),": Maximum offset value."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"setcameraframewithnameshotname-vectorcameraposition",children:(0,i.jsx)(n.code,{children:"setCameraFrameWithName(shotName, vectorCameraPosition)"})}),"\n",(0,i.jsx)(n.p,{children:"Sets the camera frame based on a shot name."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"shotName"}),': Name of the shot (e.g., "fullShot").']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"vectorCameraPosition"}),": Position of the camera."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"positioncamerabetweenpointsvector1-vector2-cameraposition-fieldofview--30",children:(0,i.jsx)(n.code,{children:"positionCameraBetweenPoints(vector1, vector2, cameraPosition, fieldOfView = 30)"})}),"\n",(0,i.jsx)(n.p,{children:"Positions the camera between two points."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"vector1"}),": First vector point."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"vector2"}),": Second vector point."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cameraPosition"}),": Position of the camera."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fieldOfView"})," (optional): Field of view for the camera."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"setcameraheadposition-playercameradistance-fieldofview--30",children:(0,i.jsx)(n.code,{children:"setCamera(headPosition, playerCameraDistance, fieldOfView = 30)"})}),"\n",(0,i.jsx)(n.p,{children:"Sets up the camera for capturing screenshots."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"headPosition"}),": Position of the character's head."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"playerCameraDistance"}),": Distance from the head for the camera."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fieldOfView"})," (optional): Field of view for the camera."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"setbackgroundbackground",children:(0,i.jsx)(n.code,{children:"setBackground(background)"})}),"\n",(0,i.jsx)(n.p,{children:"Sets the background using either color or image."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"background"}),": If an array, assumed to be RGB values [r, g, b].\nIf a string, assumed to be a URL for the background image."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"setbackgroundcolorr-g-b-a",children:(0,i.jsx)(n.code,{children:"setBackgroundColor(r, g, b, a)"})}),"\n",(0,i.jsx)(n.p,{children:"Sets the background color."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"r"}),": Red component."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"g"}),": Green component."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"b"}),": Blue component."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"a"}),": Alpha component."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"setbackgroundimageurl",children:(0,i.jsx)(n.code,{children:"setBackgroundImage(url)"})}),"\n",(0,i.jsx)(n.p,{children:"Sets the background image."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"url"}),": URL of the background image."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"savepixelscreenshotimagename-width-height-pixelsize",children:(0,i.jsx)(n.code,{children:"savePixelScreenshot(imageName, width, height, pixelSize)"})}),"\n",(0,i.jsx)(n.p,{children:"Saves a pixelated screenshot."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"imageName"}),": Name of the screenshot."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"width"}),": Width of the screenshot."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"height"}),": Height of the screenshot."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pixelSize"}),": Size of the pixels."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"savescreenshotimagename-width-height",children:(0,i.jsx)(n.code,{children:"saveScreenshot(imageName, width, height)"})}),"\n",(0,i.jsx)(n.p,{children:"Saves a regular screenshot."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"imageName"}),": Name of the screenshot."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"width"}),": Width of the screenshot."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"height"}),": Height of the screenshot."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"getscreenshotimagewidth-height",children:(0,i.jsx)(n.code,{children:"getScreenshotImage(width, height)"})}),"\n",(0,i.jsx)(n.p,{children:"Gets the screenshot as an image."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"width"}),": Width of the screenshot."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"height"}),": Height of the screenshot."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"getscreenshottexturewidth-height",children:(0,i.jsx)(n.code,{children:"getScreenshotTexture(width, height)"})}),"\n",(0,i.jsx)(n.p,{children:"Gets the screenshot as a Three.js texture."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"width"}),": Width of the screenshot."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"height"}),": Height of the screenshot."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"getscreenshotblobwidth-height",children:(0,i.jsx)(n.code,{children:"getScreenshotBlob(width, height)"})}),"\n",(0,i.jsx)(n.p,{children:"Gets the screenshot as a Blob."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"width"}),": Width of the screenshot."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"height"}),": Height of the screenshot."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"savefilestrdata-filename",children:(0,i.jsx)(n.code,{children:"saveFile(strData, filename)"})}),"\n",(0,i.jsx)(n.p,{children:"Saves a file."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"strData"}),": Data to save."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"filename"}),": Name of the file."]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var i=s(6540);const r={},c=i.createContext(r);function o(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);