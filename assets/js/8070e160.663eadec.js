"use strict";(self.webpackChunkcharacterstudio_docs=self.webpackChunkcharacterstudio_docs||[]).push([[3822],{1685:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var o=n(4848),s=n(8453);const r={},i="Quickstart",c={id:"quickstart",title:"Quickstart",description:"- Main repo//github.com/M3-org/characterstudio",source:"@site/docs/quickstart.md",sourceDirName:".",slug:"/quickstart",permalink:"/characterstudio-docs/docs/quickstart",draft:!1,unlisted:!1,editUrl:"https://github.com/m3-org/characterstudio-docs/tree/main/docs/quickstart.md",tags:[],version:"current",lastUpdatedBy:"madjin",lastUpdatedAt:1708647512,formattedLastUpdatedAt:"Feb 23, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"About",permalink:"/characterstudio-docs/docs/about"},next:{title:"History",permalink:"/characterstudio-docs/docs/history"}},a={},d=[{value:"Troubleshooting",id:"troubleshooting",level:2}];function h(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"quickstart",children:"Quickstart"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["Main repo: ",(0,o.jsx)(e.a,{href:"https://github.com/M3-org/characterstudio",children:"https://github.com/M3-org/characterstudio"})]}),"\n",(0,o.jsxs)(e.li,{children:["Demo: ",(0,o.jsx)(e.a,{href:"https://m3-org.github.io/CharacterStudio/",children:"https://m3-org.github.io/CharacterStudio/"})]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"# Clone the repo and change directory into it\ngit clone https://github.com/M3-org/CharacterStudio\ncd CharacterStudio\n\n# Install dependencies with legacy peer deps flag to ignore React errors\nnpm install --legacy-peer-deps\nnpm run dev\n\n# Or use yarn\nyarn install\nyarn run dev\n"})}),"\n",(0,o.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsxs)(e.p,{children:["This project has been mainly tested with node v16, it's recommended to install nvm to easily switch: ",(0,o.jsx)(e.a,{href:"https://github.com/nvm-sh/nvm",children:"https://github.com/nvm-sh/nvm"})]}),"\n",(0,o.jsxs)(e.p,{children:["Copy custom asset packs to the ",(0,o.jsx)(e.code,{children:"public/"})," folder. For modding / reskinning you'll mainly only need to touch files there."]}),"\n",(0,o.jsxs)(e.p,{children:["If assets aren't showing up doublecheck the ",(0,o.jsx)(e.code,{children:".env"})," file, you can either point to a remote host (can use github pages) like ",(0,o.jsx)(e.a,{href:"https://m3-org.github.io/loot-assets/loot/",children:"https://m3-org.github.io/loot-assets/loot/"})," or a path in public directory such as ",(0,o.jsx)(e.code,{children:"VITE_ASSET_PATH=./loot-assets"}),"."]}),"\n",(0,o.jsx)(e.p,{children:"If you change the project name you need to also edit"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"vite.config.js"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"package.json"})}),"\n"]})]})}function l(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(h,{...t})}):h(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>i,x:()=>c});var o=n(6540);const s={},r=o.createContext(s);function i(t){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:i(t.components),o.createElement(r.Provider,{value:e},t.children)}}}]);