"use strict";(self.webpackChunkcharacterstudio_docs=self.webpackChunkcharacterstudio_docs||[]).push([[6965],{3754:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var t=n(4848),a=n(8453);const s={},i="Sprite Atlas Generator",o={id:"Developers/Managers/sprite-atlas-generator",title:"Sprite Atlas Generator",description:"SpriteAtlasGenerator is a class responsible for generating sprite atlases from animations specified in a manifest file.",source:"@site/docs/Developers/Managers/sprite-atlas-generator.md",sourceDirName:"Developers/Managers",slug:"/Developers/Managers/sprite-atlas-generator",permalink:"/characterstudio-docs/docs/Developers/Managers/sprite-atlas-generator",draft:!1,unlisted:!1,editUrl:"https://github.com/m3-org/characterstudio-docs/tree/main/docs/Developers/Managers/sprite-atlas-generator.md",tags:[],version:"current",lastUpdatedBy:"memelotsqui",lastUpdatedAt:1709352314,formattedLastUpdatedAt:"Mar 2, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LoRa Data Generator",permalink:"/characterstudio-docs/docs/Developers/Managers/lora-data-generator"},next:{title:"Scene Context",permalink:"/characterstudio-docs/docs/Developers/Contexts/scene-context"}},c={},l=[{value:"Constructor",id:"constructor",level:2},{value:"SpriteAtlasGenerator(characterManager)",id:"spriteatlasgeneratorcharactermanager",level:3},{value:"Properties",id:"properties",level:4},{value:"Methods",id:"methods",level:4},{value:"<code>createSpriteAtlas(manifestURL)</code>",id:"createspriteatlasmanifesturl",level:3}];function d(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"sprite-atlas-generator",children:"Sprite Atlas Generator"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"SpriteAtlasGenerator"})," is a class responsible for generating sprite atlases from animations specified in a manifest file."]}),"\n",(0,t.jsx)(r.h2,{id:"constructor",children:"Constructor"}),"\n",(0,t.jsx)(r.h3,{id:"spriteatlasgeneratorcharactermanager",children:"SpriteAtlasGenerator(characterManager)"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"characterManager"}),": An instance of the character manager containing necessary modules like ",(0,t.jsx)(r.code,{children:"screenshotManager"}),", ",(0,t.jsx)(r.code,{children:"blinkManager"}),", and ",(0,t.jsx)(r.code,{children:"animationManager"}),"."]}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"properties",children:"Properties"}),"\n",(0,t.jsxs)(r.p,{children:["Properties for ",(0,t.jsx)(r.code,{children:"Sprite Atlas Generator"})," are not meant to be edited directly, they are modified with methods."]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:".characterManager: Object"})}),"\n",(0,t.jsxs)(r.p,{children:["An object containing various modules, such as ",(0,t.jsx)(r.code,{children:"screenshotManager"}),", ",(0,t.jsx)(r.code,{children:"blinkManager"}),", and ",(0,t.jsx)(r.code,{children:"animationManager"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:".screenshotManager:"})}),"\n",(0,t.jsx)(r.p,{children:"The screenshot manager used for capturing screenshots."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:".blinkManager: Object"})}),"\n",(0,t.jsx)(r.p,{children:"The blink manager used for managing blinking animations."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:".yarnanimationManager: Object**"})}),"\n",(0,t.jsx)(r.p,{children:"The animation manager used for loading and managing animations."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(r.h3,{id:"createspriteatlasmanifesturl",children:(0,t.jsx)(r.code,{children:"createSpriteAtlas(manifestURL)"})}),"\n",(0,t.jsx)(r.p,{children:"Creates a sprite atlas based on the specified manifest file."}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"manifestURL"}),": The URL of the sprite manifest file."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>o});var t=n(6540);const a={},s=t.createContext(a);function i(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);